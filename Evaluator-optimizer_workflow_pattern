<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>LLM Feedback Loop Diagram</title>
    <style>
        body {
            margin: 0;
            padding: 20px;
            font-family: Arial, sans-serif;
            background: #f9f9f9;
            display: flex;
            justify-content: center;
        }
        canvas {
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>
<canvas id="llmDiagram" width="800" height="400"></canvas>

<script>
    const canvas = document.getElementById('llmDiagram');
    const ctx = canvas.getContext('2d');

    function drawRoundedRect(x, y, width, height, radius, color, text) {
        ctx.beginPath();
        ctx.moveTo(x + radius, y);
        ctx.lineTo(x + width - radius, y);
        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
        ctx.lineTo(x + width, y + height - radius);
        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
        ctx.lineTo(x + radius, y + height);
        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
        ctx.lineTo(x, y + radius);
        ctx.quadraticCurveTo(x, y, x + radius, y);
        ctx.closePath();
        ctx.fillStyle = color;
        ctx.fill();
        ctx.strokeStyle = "#888";
        ctx.stroke();
        ctx.fillStyle = "#000";
        ctx.font = "16px Arial";
        ctx.textAlign = "center";
        ctx.textBaseline = "middle";
        ctx.fillText(text, x + width / 2, y + height / 2);
    }

    function drawArrow(fromX, fromY, toX, toY, text = "", lineWidth = 2) {
        const headlen = 10;
        const angle = Math.atan2(toY - fromY, toX - fromX);
        ctx.save();
        ctx.lineWidth = lineWidth;
        ctx.beginPath();
        ctx.moveTo(fromX, fromY);
        ctx.lineTo(toX, toY);
        ctx.strokeStyle = "#555";
        ctx.stroke();

        ctx.beginPath();
        ctx.moveTo(toX, toY);
        ctx.lineTo(toX - headlen * Math.cos(angle - Math.PI / 6), toY - headlen * Math.sin(angle - Math.PI / 6));
        ctx.lineTo(toX - headlen * Math.cos(angle + Math.PI / 6), toY - headlen * Math.sin(angle + Math.PI / 6));
        ctx.lineTo(toX, toY);
        ctx.fillStyle = "#555";
        ctx.fill();
        ctx.restore();

        if (text) {
            ctx.fillStyle = "#555";
            ctx.font = "14px Arial";
            ctx.fillText(text, (fromX + toX) / 2, (fromY + toY) / 2 - 10);
        }
    }

    // Draw elements
    drawRoundedRect(50, 160, 60, 40, 10, "#fdd", "In");
    drawArrow(110, 180, 200, 180);
    drawRoundedRect(200, 140, 160, 80, 10, "#dfffe0", "LLM Call\nGenerator");

    drawArrow(360, 160, 540, 160);
    drawRoundedRect(540, 140, 160, 80, 10, "#dfffe0", "LLM Call\nEvaluator");
    drawArrow(700, 160, 770, 160);
    drawRoundedRect(770, 140, 60, 40, 10, "#fdd", "Out");

    // Feedback loop
    drawArrow(540, 220, 355, 220, "Rejected + Feedback");
    //drawArrow(280, 220, 280, 180);
    // drawArrow(620, 180, 620, 220);
    ctx.fillStyle = "#333";
    ctx.fillText("Solution", 450, 120);
</script>
</body>
</html>
